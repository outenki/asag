from sklearn.svm import SVR
import numpy as np
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('-k', '--kernel', dest='kernel', type=str, metavar='Kernel', required=True, help="Kernel for SVR")
parser.add_argument('-p', '--penalty', dest='penalty', type=float, metavar='Penalty pamrameter', required=False, default=1.0, help="Penalty parameter C of error term")
parser.add_argument('-f', '--datafile', dest='file_data', type=str, metava="path TSV file storing data", required=True, help="The feature file generated by gen_feature.py") 
parser.add_argument('-e', '--epsilon', dest='epsilon', type=float, metava="Epsilon in the epsilon-SVR model", required=False, default=0.1, help="The feature file generated by gen_feature.py") 

args = parser.parse_args()

svr = SVR(C=args.penalty, epsilon=args.epsilon, kernel=args.kernel)
data_train, data_test = generate_training_test_data_f(args.file_data, train_ratio=0.8)

# get features and scores from training data
X = data_train[:,3]
y = data_train[:,2]

svr.fit(X, y)

# get features from test data
X = data_test[:,3]
y = svr.predict(X)

# read weights of each n-gram token
weight_fea = svr.coef_

# TODO: read vocab pickel file
# TODO: 
